// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// validate_olc
LogicalVector validate_olc(CharacterVector codes);
RcppExport SEXP olctools_validate_olc(SEXP codesSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type codes(codesSEXP );
        LogicalVector __result = validate_olc(codes);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// validate_short
LogicalVector validate_short(CharacterVector codes);
RcppExport SEXP olctools_validate_short(SEXP codesSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type codes(codesSEXP );
        LogicalVector __result = validate_short(codes);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// validate_full
LogicalVector validate_full(CharacterVector codes);
RcppExport SEXP olctools_validate_full(SEXP codesSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type codes(codesSEXP );
        LogicalVector __result = validate_full(codes);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// encode_olc
CharacterVector encode_olc(NumericVector lats, NumericVector longs, IntegerVector length);
RcppExport SEXP olctools_encode_olc(SEXP latsSEXP, SEXP longsSEXP, SEXP lengthSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type lats(latsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type longs(longsSEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type length(lengthSEXP );
        CharacterVector __result = encode_olc(lats, longs, length);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// decode_olc
DataFrame decode_olc(CharacterVector olcs);
RcppExport SEXP olctools_decode_olc(SEXP olcsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type olcs(olcsSEXP );
        DataFrame __result = decode_olc(olcs);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// shorten_olc
CharacterVector shorten_olc(CharacterVector olcs, NumericVector lats, NumericVector longs);
RcppExport SEXP olctools_shorten_olc(SEXP olcsSEXP, SEXP latsSEXP, SEXP longsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type olcs(olcsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type lats(latsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type longs(longsSEXP );
        CharacterVector __result = shorten_olc(olcs, lats, longs);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// recover_olc
CharacterVector recover_olc(CharacterVector olcs, NumericVector lats, NumericVector longs);
RcppExport SEXP olctools_recover_olc(SEXP olcsSEXP, SEXP latsSEXP, SEXP longsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type olcs(olcsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type lats(latsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type longs(longsSEXP );
        CharacterVector __result = recover_olc(olcs, lats, longs);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
